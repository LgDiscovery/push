jar {
	enabled = true
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }

}


dependencies {
	compile 'org.mybatis.generator:mybatis-generator-core:1.4.0-SNAPSHOT'
	compile 'org.mybatis:mybatis:3.4.6'
	compile 'mysql:mysql-connector-java:5.1.40'
	compile 'tk.mybatis:mapper:4.0.1'
	compile 'org.freemarker:freemarker:2.3.23'

}


configurations {
	mybatisGenerator
}

dependencies {
	mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.4.0-SNAPSHOT'
	mybatisGenerator 'org.mybatis:mybatis:3.4.6'
	mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
	mybatisGenerator 'tk.mybatis:mapper:4.0.2'
	mybatisGenerator 'org.freemarker:freemarker:2.3.23'
}


def getDbProperties = {
	def properties = new Properties()
	file("config.properties").withInputStream { inputStream ->
		properties.load(inputStream)
	}
	properties
}

task mybatisGenerate << {
	def properties = getDbProperties()
	ant.properties['targetProject'] = projectDir.path
	ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
	ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
	ant.properties['userId'] = properties.getProperty("jdbc.username")
	ant.properties['password'] = properties.getProperty("jdbc.password")
	ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
	ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
	ant.properties['modelPackage'] = properties.getProperty("package.model")
	ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
	ant.properties['srcJava'] = properties.getProperty("src.java")
	ant.properties['srcResources'] = properties.getProperty("src.resources")
	ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")

	ant.properties.each { p ->
		println(p)

	}

	ant.taskdef(
			name: 'mbgenerator',
			classname: 'org.mybatis.generator.ant.GeneratorAntTask',
			classpath: configurations.mybatisGenerator.asPath
	)
	ant.mbgenerator(overwrite: true,
			configfile: 'generatorConfig.xml', verbose: true) {
		propertyset {
			propertyref(name: 'targetProject')
			propertyref(name: 'userId')
			propertyref(name: 'driverClass')
			propertyref(name: 'connectionURL')
			propertyref(name: 'password')
			propertyref(name: 'src_main_java')
			propertyref(name: 'src_main_resources')
			propertyref(name: 'modelPackage')
			propertyref(name: 'mapperPackage')
			propertyref(name: 'sqlMapperPackage')

		}
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
